USE PACT2C222
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spPAY_ExtCalcHours]
	@EmployeeID [int] = 0,
	@DocID [bigint] = 0,
	@TotalHrs [decimal](9, 2) = 0,
	@DocDate [datetime],
	@Dimension1 [int] = 1,
	@Dimension2 [int] = 1,
	@NrmlHours [decimal](9, 2) = 0,
	@BrkHrs [decimal](9, 2) = 1,
	@ValidDay [int] = 0,
	@userid [bigint] = 1,
	@langid [bigint] = 1,
	@MODE [int] = 0,
	@NRMLHRSOP [decimal](9, 2) OUTPUT,
	@BREAKHRSOP [decimal](9, 2) OUTPUT,
	@OT1OP [decimal](9, 2) OUTPUT,
	@OT2OP [decimal](9, 2) OUTPUT,
	@OT3OP [decimal](9, 2) OUTPUT,
	@OT4OP [decimal](9, 2) OUTPUT,
	@OT5OP [decimal](9, 2) OUTPUT,
	@NORMALRATEOP [decimal](9, 2) OUTPUT,
	@OT1RATEOP [decimal](9, 2) OUTPUT,
	@OT2RATEOP [decimal](9, 2) OUTPUT,
	@OT3RATEOP [decimal](9, 2) OUTPUT,
	@OT4RATEOP [decimal](9, 2) OUTPUT,
	@OT5RATEOP [decimal](9, 2) OUTPUT,
	@TOTALCOSTOP [decimal](9, 2) OUTPUT
WITH ENCRYPTION, EXECUTE AS CALLER
AS
BEGIN TRY    
SET NOCOUNT ON;
DECLARE @NRMLHRS DECIMAL(9,2),@BREAKHRS DECIMAL(9,2),@OT1 DECIMAL(9,2),@OT2 DECIMAL(9,2),@OT3 DECIMAL(9,2),@OT4 DECIMAL(9,2),@OT5 DECIMAL(9,2)
DECLARE @TYPE VARCHAR(30),@HOURS DECIMAL(9,2),@MINUTES DECIMAL(9,2),@THOURS DECIMAL(9,2),@RHOURS DECIMAL(9,2),@OTRATECALC DECIMAL(9,2)
DECLARE @RC AS INT,@TRC AS INT,@HRS INT,@MNTS INT,@TOTALTIME VARCHAR(30)
DECLARE @EXSTNRMLHRS DECIMAL(9,2),@EXSTBREAKHRS DECIMAL(9,2)
DECLARE @NHRDIFF DECIMAL(9,2),@BRHDIFF DECIMAL(9,2),@ALLOWOT VARCHAR(5)

CREATE TABLE #HoursChart (ID BIGINT IDENTITY(1,1),DEPT INT,NORMALHRS DECIMAL(9,2),BREAKHRS DECIMAL(9,2),OT1 DECIMAL(9,2),OT2 DECIMAL(9,2),OT3 DECIMAL(9,2),OT4 DECIMAL(9,2),OT5 DECIMAL(9,2))
DECLARE @TAB TABLE(ID INT,TYPE VARCHAR(30),HOURS DECIMAL(9,2),MINUTES DECIMAL(9,2))
DECLARE @TAB1 TABLE(ID INT,NORMALHOURS DECIMAL(9,2),BREAKHOURS DECIMAL(9,2),OT1 DECIMAL(9,2),OT2 DECIMAL(9,2),OT3 DECIMAL(9,2),OT4 DECIMAL(9,2),OT5 DECIMAL(9,2)
			        ,NORMALRATE DECIMAL(9,2),OT1RATE DECIMAL(9,2),OT2RATE DECIMAL(9,2),OT3RATE DECIMAL(9,2),OT4RATE DECIMAL(9,2),OT5RATE DECIMAL(9,2),TOTALCOST DECIMAL(9,2))
DECLARE @DIMENSIONS TABLE(ID INT IDENTITY(1,1),USERDIMENSIONNAME VARCHAR(100),SYSDIMENSIONNAME VARCHAR(MAX),SEQUENCE INT,DIMENSIONVALUE INT)
CREATE TABLE #HoursChartTab (ID INT IDENTITY(1,1),USERDIMENSIONNAME VARCHAR(100),SYSDIMENSIONNAME VARCHAR(MAX),SEQUENCE INT,DIMENSIONVALUE INT
							 ,CONTROLTYPE VARCHAR(2),COSTCENTERID BIGINT)
CREATE TABLE #RatesChart(ID BIGINT IDENTITY(1,1),TYPE VARCHAR(30),LOCATION INT,CCCOLID INT,VALUE DECIMAL(9,2),LinkDataColName nVarchar(100))

SELECT @ALLOWOT=ISNULL(ISALLOWOT,'') FROM Com_CC50051 where NodeID=@EmployeeID 

--START LOADING DATA FROM DAILY ATTENDANCE TABLE FOR SPECIFIED DIMENSIONS			        
DECLARE @STRDIMENSIONLIST VARCHAR(MAX),@R INT,@TR INT,@DIMNAME VARCHAR(100),@DIMVALUE INT,@STRQUERY nVARCHAR(MAX),@STRDIMENSIONLIST1 VARCHAR(MAX)
INSERT INTO @DIMENSIONS SELECT USERCOLUMNNAME,SYSCOLUMNNAME,SECTIONSEQNUMBER,0 FROM ADM_COSTCENTERDEF WHERE COSTCENTERID=40067 AND SYSCOLUMNNAME LIKE 'dcCCNID%' AND USERCOLUMNNAME NOT LIKE 'dcCCNID%' AND SYSCOLUMNNAME <>'dcCCNID51' AND ISCOLUMNINUSE=1
UPDATE @DIMENSIONS SET DIMENSIONVALUE=@DIMENSION1 WHERE ID=1
UPDATE @DIMENSIONS SET DIMENSIONVALUE=@DIMENSION2 WHERE ID=2

SET @STRDIMENSIONLIST=''
SET @STRDIMENSIONLIST1=''
SET @R=1
SELECT @TR=COUNT(*) FROM @DIMENSIONS 
WHILE (@R<=@TR)
BEGIN	
	SELECT @DIMNAME=REPLACE(SYSDIMENSIONNAME,'dc',''),@DIMVALUE=DIMENSIONVALUE FROM @DIMENSIONS WHERE ID=@R AND DIMENSIONVALUE>1
	SET @STRDIMENSIONLIST= @STRDIMENSIONLIST +' AND '+ @DIMNAME +'='+ CONVERT(VARCHAR,@DIMVALUE) 
	
	SELECT @DIMNAME=REPLACE(SYSDIMENSIONNAME,'dc',''),@DIMVALUE=0 FROM @DIMENSIONS WHERE ID=@R AND DIMENSIONVALUE<=1
	SET @STRDIMENSIONLIST1= @STRDIMENSIONLIST1 +' AND '+ @DIMNAME +'='+ CONVERT(VARCHAR,@DIMVALUE) 
SET @R=@R+1
END
----END LOADING DATA FROM DAILY ATTENDANCE TABLE FOR SPECIFIED DIMENSIONS

--START LOADING DATA FROM HOURS CHART FOR SPECIFIED DIMENSIONS			        
DECLARE @STRHDCDIMENSIONS VARCHAR(MAX),@P INT,@PTR INT,@ColumnJoin NVARCHAR(MAX),@DefColumnJoin NVARCHAR(MAX),@ControlType Varchar(2),@HISTORYCCID BIGINT
INSERT INTO #HoursChartTab
		SELECT USERCOLUMNNAME,REPLACE(SYSCOLUMNNAME,'DC',''),SECTIONSEQNUMBER,0,'',PARENTCOSTCENTERID
			   FROM ADM_COSTCENTERDEF WHERE COSTCENTERID=40066 AND SYSCOLUMNNAME LIKE 'dcCCNID%' AND USERCOLUMNNAME NOT LIKE 'dcCCNID%' AND ISCOLUMNINUSE=1
		UPDATE H SET H.CONTROLTYPE=A.USERPROBABLEVALUES FROM #HoursChartTab H,ADM_COSTCENTERDEF A WHERE A.COSTCENTERID=50051 AND 
			   A.SYSCOLUMNNAME=H.SYSDIMENSIONNAME AND SYSCOLUMNNAME LIKE 'CCNID%' AND USERCOLUMNNAME NOT LIKE 'CCNID%' AND ISCOLUMNINUSE=1
SET @STRHDCDIMENSIONS=''
SET @ColumnJoin=''
SET @DefColumnJoin=''
SET @ControlType=''
SET @P=1
SELECT @PTR=COUNT(*) FROM #HoursChartTab 
WHILE (@P<=@PTR)
BEGIN	
	SELECT @DIMNAME=REPLACE(SYSDIMENSIONNAME,'dc',''),@ControlType=CONTROLTYPE,@HISTORYCCID=COSTCENTERID FROM #HoursChartTab WHERE ID=@P
	SET @STRHDCDIMENSIONS= @STRHDCDIMENSIONS +' AND DC.'+ @DIMNAME +'=C.'+ @DIMNAME
	SET @STRQUERY=''
	IF(@ControlType='H')
		SET @STRQUERY='DECLARE @VALUE INT SET @VALUE=(SELECT ISNULL(HistoryNodeID,0) FROM COM_HistoryDetails WITH(NOLOCK) WHERE NodeID='+ CONVERT(VARCHAR,@EmployeeID)+' AND CostCenterID=50051 AND HistoryCCID='+ CONVERT(VARCHAR,@HISTORYCCID)+' AND (CONVERT(DATETIME,FromDate)<='''+ convert(VARCHAR,@DocDate,106)+''') AND (CONVERT(DATETIME,ToDate)>='''+ convert(VARCHAR,@DocDate,106)+''' OR ToDate IS NULL))  '
	ELSE
		SET @STRQUERY='DECLARE @VALUE INT SET @VALUE=(SELECT '+ @DIMNAME +' FROM COM_CCCCDATA  WHERE COSTCENTERID=50051 AND NODEID='+ CONVERT(VARCHAR,@EmployeeID)+')  '
	
	SET @STRQUERY=@STRQUERY+' UPDATE #HoursChartTab SET DIMENSIONVALUE=@VALUE WHERE REPLACE(SYSDIMENSIONNAME,''DC'','''')='''+ CONVERT(VARCHAR,@DIMNAME) +''''
	--PRINT @STRQUERY
	EXEC (@STRQUERY)
	IF(@DIMNAME='CCNID51')
		SET @ColumnJoin=@ColumnJoin+ ' AND DC.DC' + @DIMNAME+'='+CONVERT(VARCHAR,@EmployeeID)
	ELSE
		SET @ColumnJoin=@ColumnJoin+ ' AND DC.DC' + @DIMNAME+'='+(SELECT CONVERT(VARCHAR,DIMENSIONVALUE) FROM #HoursChartTab WHERE ID=@P)
		
		SET @DefColumnJoin =@DefColumnJoin+ ' AND DC.DC' + @DIMNAME+'=1'
SET @P=@P+1
END
--SELECT * FROM #HoursChartTab
--END LOADING DATA FROM HOURS CHART FOR SPECIFIED DIMENSIONS			        

INSERT INTO @TAB1 VALUES(1,0,0,0,0,0,0,0,0,0,0,0,0,0,0)
IF (ISNULL(@DOCID,0)>=0 and ((Select Count(*) From Com_CC50051 where NodeID=@EmployeeID)>0))
BEGIN
	--HOURSCHART: LOADING DATA FROM HOURSCHART TABLE FOR SPECIFIED EMPLOYEE
	SET @STRQUERY=''
	SET @STRQUERY='
	INSERT INTO #HoursChart
	SELECT top 1 0,td.dcAlpha1,td.dcalpha2,ISNULL(td.dcAlpha8,0),ISNULL(td.dcAlpha9,0),ISNULL(td.dcAlpha10,0),ISNULL(td.dcAlpha11,0),ISNULL(td.dcAlpha12,0) FROM INV_DOCDETAILS ID WITH(NOLOCK), COM_DocCCData DC WITH(NOLOCK),COM_DocTextData TD WITH(NOLOCK)
	WHERE      ID.INVDOCDETAILSID=DC.INVDOCDETAILSID AND ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND DC.INVDOCDETAILSID=TD.INVDOCDETAILSID  '+ CONVERT(VARCHAR(MAX),@ColumnJoin) +'
  		       AND ID.COSTCENTERID=40066 AND ID.STATUSID =369 AND ISDATE(TD.dcAlpha6)=1  AND CONVERT(DATETIME,TD.dcAlpha6)<= '''+ convert(VARCHAR,@DocDate,106)+''' ORDER BY CONVERT(DATETIME,TD.dcAlpha6) DESC  '
	--PRINT (@STRQUERY)
	EXEC (@STRQUERY)
	IF((SELECT COUNT(*) FROM #HoursChart)<=0)
	BEGIN
		--HOURSCHART: IF NODATE FOUND THEN LOADING DATA FROM HOURSCHART TABLE FOR DEFAULT EMPLOYEE
		SET @STRQUERY=''
		SET @STRQUERY='
		INSERT INTO #HoursChart
		SELECT top 1 0,td.dcAlpha1,td.dcalpha2,ISNULL(td.dcAlpha8,0),ISNULL(td.dcAlpha9,0),ISNULL(td.dcAlpha10,0),ISNULL(td.dcAlpha11,0),ISNULL(td.dcAlpha12,0) FROM INV_DOCDETAILS ID WITH(NOLOCK), COM_DocCCData DC WITH(NOLOCK),COM_DocTextData TD WITH(NOLOCK)
		WHERE      ID.INVDOCDETAILSID=DC.INVDOCDETAILSID AND ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND DC.INVDOCDETAILSID=TD.INVDOCDETAILSID  '+ CONVERT(VARCHAR(MAX),@DefColumnJoin) +'
  				   AND ID.COSTCENTERID=40066 AND ID.STATUSID =369 AND ISDATE(TD.dcAlpha6)=1  AND CONVERT(DATETIME,TD.dcAlpha6)<= '''+ convert(VARCHAR,@DocDate,106)+''' ORDER BY CONVERT(DATETIME,TD.dcAlpha6) DESC  '
		--PRINT (@STRQUERY)
		EXEC (@STRQUERY)	
	END		       
  	
  	--LOADING OVERTIME MAP FILED FROM RESERVE WORDS
  	INSERT INTO #RatesChart  VALUES('NORMALRATE',0,36562 ,0,'')
  	INSERT INTO #RatesChart  VALUES('RATE1',0,0,0,'')
	INSERT INTO #RatesChart  VALUES('OT1RATE',0,36565 ,0,(Select RW.SysColumnName From Adm_CostCenterDef RW with(nolock),Adm_CostCenterDef CCD with(nolock) Where RW.CostCenterColID=CCD.LinkData And RW.CostCenterID=79 And CCD.CostCenterID=40067 And CCD.CostCenterColID=36564))
	INSERT INTO #RatesChart  VALUES('OT2RATE',0,36567 ,0,(Select RW.SysColumnName From Adm_CostCenterDef RW with(nolock),Adm_CostCenterDef CCD with(nolock) Where RW.CostCenterColID=CCD.LinkData And RW.CostCenterID=79 And CCD.CostCenterID=40067 And CCD.CostCenterColID=36566))
	INSERT INTO #RatesChart  VALUES('OT3RATE',0,36569 ,0,(Select RW.SysColumnName From Adm_CostCenterDef RW with(nolock),Adm_CostCenterDef CCD with(nolock) Where RW.CostCenterColID=CCD.LinkData And RW.CostCenterID=79 And CCD.CostCenterID=40067 And CCD.CostCenterColID=36568))
	INSERT INTO #RatesChart  VALUES('OT4RATE',0,36571 ,0,(Select RW.SysColumnName From Adm_CostCenterDef RW with(nolock),Adm_CostCenterDef CCD with(nolock) Where RW.CostCenterColID=CCD.LinkData And RW.CostCenterID=79 And CCD.CostCenterID=40067 And CCD.CostCenterColID=36570))
	INSERT INTO #RatesChart  VALUES('OT5RATE',0,36573 ,0,(Select RW.SysColumnName From Adm_CostCenterDef RW with(nolock),Adm_CostCenterDef CCD with(nolock) Where RW.CostCenterColID=CCD.LinkData And RW.CostCenterID=79 And CCD.CostCenterID=40067 And CCD.CostCenterColID=36572))
	
	--UPDATE RATES FROM TAXCHART BASED ON DIMENSIONS,WEF AND TILLDATE
	IF ISNULL(@STRDIMENSIONLIST,'')<>''
	BEGIN
		SET @STRQUERY=''
		--SET @STRQUERY='UPDATE T1 SET T1.VALUE=T.RATE FROM #RatesChart AS T1 
		--		      INNER JOIN (SELECT COLID A, VALUE RATE FROM COM_CCTaxes WITH(NOLOCK) WHERE  DOCID=40067 AND STATUSID=1 '+ CONVERT(VARCHAR(MAX),@STRDIMENSIONLIST) +'
		--		      AND '''+ CONVERT(VARCHAR(MAX),CONVERT(DATETIME,@DocDate),106) +''' between CONVERT(DATETIME,WEF) and CONVERT(DATETIME,TillDate)) T ON T.A=T1.CCCOLID	'
		SET @STRQUERY='UPDATE T1 SET T1.VALUE=T.RATE FROM #RatesChart AS T1 
				      INNER JOIN (SELECT COLID A, VALUE RATE FROM COM_CCTaxes WITH(NOLOCK) WHERE  DOCID=40067 AND STATUSID=1 '+ CONVERT(VARCHAR(MAX),@STRDIMENSIONLIST) +'
				      AND (TillDate is null or TillDate=0 or CONVERT(DATETIME,TillDate)>='''+  CONVERT(VARCHAR(MAX),CONVERT(DATETIME,@DocDate),106)+''') 
				      and  CONVERT(DATETIME,WEF)<='''+  CONVERT(VARCHAR(MAX),CONVERT(DATETIME,@DocDate),106) +'''
				      ) T ON T.A=T1.CCCOLID 	'
				      
      --print (@STRQUERY)
 	   EXEC (@STRQUERY)     
	END
	ELSE
	BEGIN
		SET @STRQUERY=''
		--SET @STRQUERY='UPDATE T1 SET T1.VALUE=T.RATE FROM #RatesChart AS T1 
		--		      INNER JOIN (SELECT COLID A, VALUE RATE FROM COM_CCTaxes WITH(NOLOCK) WHERE  DOCID=40067 AND STATUSID=1 '+ CONVERT(VARCHAR(MAX),@STRDIMENSIONLIST1) +'
		--		      AND '''+ CONVERT(VARCHAR(MAX),CONVERT(DATETIME,@DocDate),106) +''' between CONVERT(DATETIME,WEF) and CONVERT(DATETIME,TillDate)) T ON T.A=T1.CCCOLID	'
		SET @STRQUERY='UPDATE T1 SET T1.VALUE=T.RATE FROM #RatesChart AS T1 
				      INNER JOIN (SELECT COLID A, VALUE RATE FROM COM_CCTaxes WITH(NOLOCK) WHERE  DOCID=40067 AND STATUSID=1 '+ CONVERT(VARCHAR(MAX),@STRDIMENSIONLIST1) +'
				      AND (TillDate is null or TillDate=0 or CONVERT(DATETIME,TillDate)>='''+  CONVERT(VARCHAR(MAX),CONVERT(DATETIME,@DocDate),106)+''') 
				      and  CONVERT(DATETIME,WEF)<='''+  CONVERT(VARCHAR(MAX),CONVERT(DATETIME,@DocDate),106) +'''
				      ) T ON T.A=T1.CCCOLID 	'
		--print (@STRQUERY)		       
	   EXEC (@STRQUERY)
	END
	  
	--SELECT * FROM #RatesChart
  	IF((SELECT COUNT(*) FROM #HoursChart)>0)
  	BEGIN
  		--SELECT DATA FROM #HoursChart TABLE AND INSERT INTO @TAB AS TYPE,HOURS AND MINUTES
  		SELECT @NRMLHRS=NORMALHRS,@BREAKHRS=BREAKHRS,@OT1=OT1,@OT2=OT2,@OT3=OT3,@OT4=OT4,@OT5=OT5 FROM #HoursChart
  		
  		--START : RETREVING EXISTING NORMAL HOURS AND BREAK HOURS
  		SELECT @EXSTNRMLHRS=SUM(ISNULL(DN.DCNUM2,0)),@EXSTBREAKHRS=SUM(ISNULL(DN.DCNUM4,0)) 
  		FROM   INV_DOCDETAILS ID WITH(NOLOCK) JOIN COM_DocCCData DC WITH(NOLOCK) ON ID.INVDOCDETAILSID=DC.INVDOCDETAILSID
			   JOIN COM_DocNumData DN WITH(NOLOCK) ON ID.INVDOCDETAILSID=DN.INVDOCDETAILSID JOIN COM_DocTextData TD WITH(NOLOCK) ON ID.INVDOCDETAILSID=TD.INVDOCDETAILSID
  		WHERE  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND ID.COSTCENTERID=40067 AND ID.DOCID<>@DOCID AND DC.DCCCNID51=@EmployeeID AND ISDATE(TD.DCALPHA1)=1 AND CONVERT(DATETIME,TD.dcAlpha1)= CONVERT(DATETIME,@DocDate)
		       
		SET @NHRDIFF=ISNULL(@NRMLHRS,0)-(ISNULL(@EXSTNRMLHRS,0)+ISNULL(@NrmlHours,0))
		IF @NHRDIFF<0
			SET @NrmlHours=0
					
		SET @BRHDIFF=@BREAKHRS-(@EXSTBREAKHRS+ISNULL(@BrkHrs,0))
		IF @BRHDIFF<0
			SET @BrkHrs=0
		--END : RETREVING EXISTING NORMAL HOURS AND BREAK HOURS
		
		--NORMAL HOURS
  		IF ISNULL(@NrmlHours,0)=0
  		BEGIN
  			SET @NRMLHRS=@NRMLHRS-ISNULL(@EXSTNRMLHRS,0)
  			INSERT INTO @TAB VALUES (1,'NORMALHRS',@NRMLHRS,LTRIM(DATEDIFF(MINUTE,0,replace(@NRMLHRS,'.',':'))))
  		END
  		ELSE
  		BEGIN
  			IF(@DOCID>0)
  				INSERT INTO @TAB VALUES (1,'NORMALHRS',@NRMLHRS,LTRIM(DATEDIFF(MINUTE,0,replace(@NRMLHRS,'.',':'))))
  			ELSE
  				INSERT INTO @TAB VALUES (1,'NORMALHRS',@NrmlHours,LTRIM(DATEDIFF(MINUTE,0,replace(@NrmlHours,'.',':'))))
  		END
  		
  		--BREAK HOURS
  		IF ISNULL(@BrkHrs,0)=1
  		BEGIN
  			SET @BREAKHRS=@BREAKHRS-ISNULL(@EXSTBREAKHRS,0)
  			INSERT INTO @TAB VALUES (2,'BREAKHRS',@BREAKHRS,LTRIM(DATEDIFF(MINUTE,0,replace(@BREAKHRS,'.',':'))))
		END
		ELSE
		BEGIN
			INSERT INTO @TAB VALUES (2,'BREAKHRS',@BrkHrs,LTRIM(DATEDIFF(MINUTE,0,replace(@BrkHrs,'.',':'))))
		END
		
		--OT HOURS
		INSERT INTO @TAB VALUES (3,'OT1',@OT1,LTRIM(DATEDIFF(MINUTE,0,replace(@OT1,'.',':'))))
		INSERT INTO @TAB VALUES (4,'OT2',@OT2,LTRIM(DATEDIFF(MINUTE,0,replace(@OT2,'.',':'))))
		INSERT INTO @TAB VALUES (5,'OT3',@OT3,LTRIM(DATEDIFF(MINUTE,0,replace(@OT3,'.',':'))))
		INSERT INTO @TAB VALUES (6,'OT4',@OT4,LTRIM(DATEDIFF(MINUTE,0,replace(@OT4,'.',':'))))
		INSERT INTO @TAB VALUES (7,'OT5',@OT5,LTRIM(DATEDIFF(MINUTE,0,replace(@OT5,'.',':'))))
		
		
		--FOR WEEKLY OFF AND HOLIDAY OT
		IF ISNULL(@ValidDay,0)=1 --1. WEEKLY OFF
  			UPDATE T SET  T.HOURS=0,T.MINUTES=0  FROM @TAB T,#RatesChart R WHERE T.ID=R.ID AND R.LinkDataColName<>'PayWeeklyOffOT'
		ELSE IF ISNULL(@ValidDay,0)=2 --2.HOLIDAY
  			UPDATE T SET  T.HOURS=0,T.MINUTES=0  FROM @TAB T,#RatesChart R WHERE T.ID=R.ID AND R.LinkDataColName<>'PayHolidayOT'
		ELSE
  			UPDATE T SET  T.HOURS=0,T.MINUTES=0  FROM @TAB T,#RatesChart R WHERE T.ID=R.ID AND R.LinkDataColName in ('PayWeeklyOffOT','PayHolidayOT')
  			
  		--	select * from #RatesChart
  		--select * from @TAB
		--SELECT  * FROM @TAB
		--CONVERT DECIMAL TOTAL HOURS INTO TIME FORMAT(HH:mm) - SPLIT TOTAL HOURS INTO HOURS AND MINUTES - CONVERT HOURS TO MINUTES AND ADD THE REMAINING MINUTES
		SET @TOTALTIME=CONVERT(VARCHAR,@TotalHrs)
		SET @TOTALTIME=REPLACE(@TOTALTIME,'.',':')
		SET @HRS=DATEPART(HOUR,@TOTALTIME)
		SET @MNTS=DATEPART(MINUTE,@TOTALTIME)
		SET @THOURS=@HRS*60
		SET @THOURS=@THOURS+@MNTS
  	  	--SELECT * FROM @TAB
  	    
  	    SET @RC=1
  	   	SELECT @TRC=COUNT(*) FROM @TAB
		WHILE (@RC<=@TRC)
		BEGIN	
			 --READING WORKING HOUR TYPE,HOURS AND MINUTES
			 SELECT @TYPE=TYPE,@HOURS=HOURS,@MINUTES=MINUTES FROM @TAB WHERE ID=@RC
			 --READING RATES FOR WORKING HOUR TYPE
			 SELECT @OTRATECALC=ISNULL(VALUE,0) FROM #RatesChart WHERE ID=@RC
			 IF ISNULL(@MINUTES,0)>0
			 BEGIN
				IF (@MINUTES<@THOURS)
				BEGIN
					IF @TYPE='NORMALHRS'
						UPDATE @TAB1 SET NORMALHOURS=@HOURS,NORMALRATE=@OTRATECALC
					ELSE IF @TYPE='BREAKHRS'
						UPDATE @TAB1 SET BREAKHOURS=@HOURS
					ELSE IF @TYPE='OT1'
						UPDATE @TAB1 SET OT1=@HOURS,OT1RATE=@OTRATECALC
					ELSE IF @TYPE='OT2'
						UPDATE @TAB1 SET OT2=@HOURS,OT2RATE=@OTRATECALC
					ELSE IF @TYPE='OT3'
						UPDATE @TAB1 SET OT3=@HOURS,OT3RATE=@OTRATECALC
					ELSE IF @TYPE='OT4'
						UPDATE @TAB1 SET OT4=@HOURS,OT4RATE=@OTRATECALC
					ELSE IF @TYPE='OT5'
						UPDATE @TAB1 SET OT5=@HOURS,OT5RATE=@OTRATECALC
						
				SET @THOURS=@THOURS-@MINUTES
				END
				ELSE
				BEGIN
					IF @THOURS>=60 
						SELECT @THOURS=(CONVERT(INT,@THOURS)/60)+((CONVERT(INT,@THOURS)%60)/100.0)
					ELSE
						SET @THOURS=@THOURS/100 
						
					IF @TYPE='NORMALHRS'
						UPDATE @TAB1 SET NORMALHOURS=@THOURS,NORMALRATE=@OTRATECALC
					ELSE IF @TYPE='BREAKHRS'
						UPDATE @TAB1 SET BREAKHOURS=@THOURS
					ELSE IF @TYPE='OT1'
						UPDATE @TAB1 SET OT1=@THOURS,OT1RATE=@OTRATECALC
					ELSE IF @TYPE='OT2'
						UPDATE @TAB1 SET OT2=@THOURS,OT2RATE=@OTRATECALC
					ELSE IF @TYPE='OT3'
						UPDATE @TAB1 SET OT3=@THOURS,OT3RATE=@OTRATECALC
					ELSE IF @TYPE='OT4'
						UPDATE @TAB1 SET OT4=@THOURS,OT4RATE=@OTRATECALC
					ELSE IF @TYPE='OT5'
						UPDATE @TAB1 SET OT5=@THOURS,OT5RATE=@OTRATECALC

				SET @THOURS=@THOURS-@THOURS
				END
			 END
	    SET @RC=@RC+1
	    END
	 
	    UPDATE @TAB1 SET TOTALCOST=LTRIM(DATEDIFF(MINUTE,0,replace(NORMALHOURS,'.',':')))*((NORMALRATE/60))+LTRIM(DATEDIFF(MINUTE,0,replace(OT1,'.',':')))*((OT1RATE/60))+LTRIM(DATEDIFF(MINUTE,0,replace(OT2,'.',':')))*((OT2RATE/60))+LTRIM(DATEDIFF(MINUTE,0,replace(OT3,'.',':')))*((OT3RATE/60))+LTRIM(DATEDIFF(MINUTE,0,replace(OT4,'.',':')))*((OT4RATE/60))+LTRIM(DATEDIFF(MINUTE,0,replace(OT5,'.',':')))*((OT5RATE/60))
	    --SELECT * FROM @TAB1
	    IF ISNULL(@MODE,0)=1--FOR ALL EMPLOYEES
	    BEGIN
			SELECT @NRMLHRSOP=NORMALHOURS,@BREAKHRSOP=BREAKHOURS,@OT1OP=OT1,@OT2OP=OT2,@OT3OP=OT3,@OT4OP=OT4,@OT5OP=OT5,@NORMALRATEOP=NORMALRATE,@OT1RATEOP=OT1RATE,@OT2RATEOP=OT2RATE,@OT3RATEOP=OT3RATE,@OT4RATEOP=OT4RATE,@OT5RATEOP=OT5RATE,@TOTALCOSTOP=TOTALCOST FROM @TAB1
	    END
	    ELSE IF ISNULL(@MODE,0)=0--FOR SELECTED EMPLOYEE
	    BEGIN
			IF (ISNULL(@ALLOWOT,'')='Yes')
			BEGIN
				SELECT NORMALHOURS as NRMLHRSOP,BREAKHOURS as BREAKHRSOP,OT1 as OT1OP,OT2 as OT2OP,OT3 as OT3OP,OT4 as OT4OP,OT5 as OT5OP,NORMALRATE as NORMALRATEOP,OT1RATE as OT1RATEOP,OT2RATE as OT2RATEOP,OT3RATE as OT3RATEOP,OT4RATE AS OT4RATEOP,OT5RATE AS OT5RATEOP,TOTALCOST AS TOTALCOSTOP FROM @TAB1
			END
			ELSE
			BEGIN
				UPDATE @TAB1 SET TOTALCOST=LTRIM(DATEDIFF(MINUTE,0,replace(NORMALHOURS,'.',':')))*((NORMALRATE/60))
				SELECT NORMALHOURS as NRMLHRSOP,BREAKHOURS as BREAKHRSOP,0 as OT1OP,0 as OT2OP,0 as OT3OP,0 as OT4OP,0 as OT5OP,NORMALRATE as NORMALRATEOP,0 as OT1RATEOP,0 as OT2RATEOP,0 as OT3RATEOP,0 AS OT4RATEOP,0 AS OT5RATEOP,TOTALCOST AS TOTALCOSTOP FROM @TAB1
			END
		END--
	END--HOURS CHART
	ELSE
	BEGIN
		IF ISNULL(@MODE,0)=1--FOR ALL EMPLOYEES
			SELECT @NRMLHRSOP=0,@BREAKHRSOP=0,@OT1OP=0,@OT2OP=0,@OT3OP=0,@OT4OP=0,@OT5OP=0,@NORMALRATEOP=0,@OT1RATEOP=0,@OT2RATEOP=0,@OT3RATEOP=0,@OT4RATEOP=0,@OT5RATEOP=0	,@TOTALCOSTOP=0
		ELSE
			SELECT 0 as NRMLHRSOP,0 as BREAKHRSOP,0 as OT1OP,0 as OT2OP,0 as OT3OP,0 as OT4OP,0 as OT5OP,0 as NORMALRATEOP,0 as OT1RATEOP,0 as OT2RATEOP,0 as OT3RATEOP,0 AS OT4RATEOP,0 AS OT5RATEOP,0 AS TOTALCOSTOP
		END
	END--END HOURS CHART
ELSE--DOCID
BEGIN
	SELECT 0 as NRMLHRSOP,0 as BREAKHRSOP,0 as OT1OP,0 as OT2OP,0 as OT3OP,0 as OT4OP,0 as OT5OP,0 as NORMALRATEOP,0 as OT1RATEOP,0 as OT2RATEOP,0 as OT3RATEOP,0 AS OT4RATEOP,0 AS OT5RATEOP,0 AS TOTALCOSTOP
END

DROP TABLE #RatesChart
DROP TABLE #HoursChart
DROP TABLE #HoursChartTab
SET NOCOUNT OFF;  
RETURN 1  
END TRY  
BEGIN CATCH    
  --Return exception info [Message,Number,ProcedureName,LineNumber]    
  IF ERROR_NUMBER()=50000  
  BEGIN  
   SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=@LangID  
  END  
  ELSE  
  BEGIN  
   SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() as ErrorNumber, ERROR_PROCEDURE()as ProcedureName, ERROR_LINE() AS ErrorLine  
   FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=-999 AND LanguageID=@LangID  
  END   
SET NOCOUNT OFF    
RETURN -999     
END CATCH

GO
