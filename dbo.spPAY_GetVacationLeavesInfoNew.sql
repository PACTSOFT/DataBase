USE PACT2C222
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spPAY_GetVacationLeavesInfoNew]
	@FromDate [varchar](20) = null,
	@ToDate [varchar](20) = null,
	@EmployeeID [int] = 0,
	@userid [bigint] = 1,
	@langid [bigint] = 1,
	@RptMode [int] = 0,
	@LeavesTakenOP [decimal](9, 2) OUTPUT,
	@LeavesTakenEncash [decimal](9, 2) OUTPUT
WITH ENCRYPTION, EXECUTE AS CALLER
AS
BEGIN
SET NOCOUNT ON;

DECLARE @FDATE DATETIME,@TDATE DATETIME,@GRADE INT,@GRADEWISEVACATIONPREF nVARCHAR(10)
DECLARE @ALStartMonth Int,@ALStartMonthYear DateTime,@ALEndMonthYear DateTime,@MWKOFFS FLOAT,@MHDAYS FLOAT

DECLARE @MONTH111 DATETIME,@MONTH222 DATETIME
DECLARE @MONTH13 DATETIME,@MONTH14 DATETIME

Declare @Month1 DateTime,@Month2 DateTime,@Month3 DateTime,@Month4 DateTime,@Month5 DateTime,@Month6 DateTime
Declare @Month7 DateTime,@Month8 DateTime,@Month9 DateTime,@Month10 DateTime,@Month11 DateTime,@Month12 DateTime
--Get Vacation LeaveType Component ID	
DECLARE @ExcludeWeeklyOffsasVacation VARCHAR(3),@ExcludeHolidaysasVacation VARCHAR(3),@VacationLeaveType INT
DECLARE @TabDatesRange TABLE (SNO BIGINT IDENTITY(1,1),ID BIGINT ,DATE1 DATETIME,DAYNAME VARCHAR(50),WEEKNO INT,COUNT INT,NOOFDAYS Float,FLAG INT,IncExc varchar(5))
DECLARE @STARTDATE1 DATETIME,@ENDATE1 DATETIME
Declare @MonthTab Table(ID BigInt Identity(1,1),STDATE DateTime,EDDATE DateTime)
DECLARE @LocID INT,@PayrollDate DATETIME, @INCREXC VARCHAR(50)

--SET TO FIRST DAY FOR THE GIVEN DATE
SET @PayrollDate=DATEADD(MONTH,DATEDIFF(MONTH,0,CONVERT(DATETIME,@FromDate)),0)
IF((SELECT COUNT(*) FROM ADM_CostCenterDef WITH(NOLOCK) WHERE CostCenterID=50051 and SysColumnName ='CCNID2' and IsColumnInUse=1 and UserProbableValues='H')>0)
	SELECT @LocID=HistoryNodeID FROM COM_HistoryDetails WITH(NOLOCK) WHERE NodeID=@EmployeeID AND CostCenterID=50051 AND HistoryCCID=50002 AND (CONVERT(DATETIME,FromDate)<=CONVERT(DATETIME,@PayrollDate)) AND (CONVERT(DATETIME,ToDate)>=CONVERT(DATETIME,@PayrollDate) OR ToDate IS NULL)
ELSE
	SELECT @LocID=ISNULL(CC.CCNID2,1) FROM COM_CC50051 C51 WITH(NOLOCK),COM_CCCCDATA CC  WITH(NOLOCK) WHERE C51.NODEID=CC.NODEID AND C51.NODEID=@EmployeeID

--START:FOR START DATE AND END DATE OF LEAVE YEAR
EXEC [spPAY_EXTGetLeaveyearDates] @FromDate,@ALStartMonthYear OUTPUT,@ALEndMonthYear OUTPUT
----START : LOADING MONTHS BASED ON GIVEN DATE RANGE FROM FROMDATE AND TODATE

SET @MONTH111 =dateadd(m,-2,@ALStartMonthYear)
SET @MONTH222 =DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear),0))

SET @Month1 =@ALStartMonthYear
SET @Month2 =DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+2,0))
SET @Month3 = DATEADD(d,1,DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+2,0)))
SET @Month4 =DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+4,0))
SET @Month5 = DATEADD(d,1,DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+4,0)))
SET @Month6 = DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+6,0))
SET @Month7 = DATEADD(d,1,DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+6,0)))
SET @Month8 = DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+8,0))
SET @Month9 = DATEADD(d,1,DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+8,0)))
SET @Month10 = DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+10,0))
SET @Month11 = DATEADD(d,1,DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+10,0)))
SET @Month12 = DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+12,0))

SET @MONTH13 = DATEADD(d,1,DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+12,0)))
SET @MONTH14 = DATEADD(D,-1,DATEADD(MM,DATEDIFF(M,0,@ALStartMonthYear)+14,0))
				
INSERT INTO @MONTHTAB VALUES(@MONTH111,@MONTH222)

INSERT INTO @MonthTab VALUES(@Month1,@Month2)
INSERT INTO @MonthTab VALUES(@Month3,@Month4)
INSERT INTO @MonthTab VALUES(@Month5,@Month6)
INSERT INTO @MonthTab VALUES(@Month7,@Month8)
INSERT INTO @MonthTab VALUES(@Month9,@Month10)
INSERT INTO @MonthTab VALUES(@Month11,@Month12)

INSERT INTO @MONTHTAB VALUES(@MONTH13,@MONTH14)
--END : LOADING MONTHS BASED ON GIVEN DATE RANGE FROM FROMDATE AND TODATE

--START: CHECKING GRADE
SELECT @GradewiseVacationPref=ISNULL(VALUE,'False') FROM ADM_GlobalPreferences WITH(NOLOCK) WHERE NAME='GradeWiseVacation'
IF (@GRADEWISEVACATIONPREF='True')
BEGIN
	IF((SELECT COUNT(*) FROM ADM_CostCenterDef WITH(NOLOCK) WHERE CostCenterID=50051 and SysColumnName ='CCNID53' and IsColumnInUse=1 and UserProbableValues='H')>0)
		SELECT @GRADE=ISNULL(HistoryNodeID,0) FROM COM_HistoryDetails WITH(NOLOCK) WHERE NodeID=@EmployeeID AND CostCenterID=50051 AND HistoryCCID=50053 AND (CONVERT(DATETIME,FromDate)<=CONVERT(DATETIME,@PayrollDate)) AND (CONVERT(DATETIME,ToDate)>=CONVERT(DATETIME,@PayrollDate) OR ToDate IS NULL)
	ELSE
		SELECT @GRADE=ISNULL(CCNID53,0) FROM COM_CCCCDATA WITH(NOLOCK) WHERE COSTCENTERID=50051 AND NODEID=@EmployeeID
END

IF ISNULL(@GRADE,0)=0
	SET @GRADE=1
	
IF ((SELECT COUNT(*) FROM INV_DOCDETAILS ID WITH(NOLOCK),COM_DOCTEXTDATA TD WITH(NOLOCK),COM_DOCCCDATA CC WITH(NOLOCK)
	WHERE  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND TD.INVDOCDETAILSID=CC.INVDOCDETAILSID AND CC.DCCCNID53=@GRADE AND ID.COSTCENTERID=40061)<=0)
BEGIN
	SELECT 'Please check the vacation preferences for the grade' as VacationPreferencesMessage
END
ELSE
BEGIN
	SELECT distinct @ExcludeWeeklyOffsasVacation=ISNULL(TD.dcAlpha6,'NO') ,@ExcludeHolidaysasVacation=ISNULL(TD.dcAlpha7,'NO'),@VacationLeaveType=isnull(dcAlpha1,0)
	FROM INV_DOCDETAILS ID WITH(NOLOCK),COM_DOCTEXTDATA TD WITH(NOLOCK),COM_DOCCCDATA CC WITH(NOLOCK)
	WHERE  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID AND ID.INVDOCDETAILSID=CC.INVDOCDETAILSID AND TD.INVDOCDETAILSID=CC.INVDOCDETAILSID AND CC.DCCCNID53=@GRADE AND ID.COSTCENTERID=40061	
END
--END: CHECKING GRADE

IF(@FromDate is not null and @ToDate is not null )
BEGIN			
		SELECT @INCREXC=ISNULL(INCLUDEREXCLUDE,'') FROM COM_CC50054 WITH(NOLOCK)
		WHERE  GRADEID=@GRADE AND COMPONENTID=@VacationLeaveType AND PAYROLLDATE=(SELECT MAX(PAYROLLDATE) FROM COM_CC50054  WITH(NOLOCK) WHERE CONVERT(DATETIME,PAYROLLDATE)<=CONVERT(DATETIME,@PayrollDate) AND GradeID=@Grade)
		--Start: LOADING DATES
		SELECT @STARTDATE1=CONVERT(DATETIME,@FromDate),@ENDATE1=CONVERT(DATETIME,@ToDate) 
		;WITH DATERANGE AS
		(
		SELECT @STARTDATE1 AS DT,1 AS ID
		UNION ALL
		SELECT DATEADD(DD,1,DT),DATERANGE.ID+1 FROM DATERANGE WHERE ID<=DATEDIFF("d",convert(varchar,@STARTDATE1,101),convert(varchar,@ENDATE1,101))
		)
		
		INSERT INTO @TabDatesRange
		SELECT ROW_NUMBER() OVER (ORDER BY DT) AS ID,DT AS WEEKDATE,DATENAME(DW,DT) AS DAY,0,0,0,0,'' FROM DATERANGE	--WHERE (DATEPART(DW,DT)=1 OR DATEPART(DW,DT)=7)
		--END: LOADING DATES
		
		--START: LOADING DATA BASED ON FROMDATE AND TODATE GIVEN 
		DECLARE @DATESAPPLIEDCOUNT TABLE (Docdate DateTime,VoucherNo nVarchar(50),OPBalance float,CreditedDays float,TotOPDays float,FDATE DATETIME,TDATE DATETIME,NOOFDAYS Float,IsEncashDays NVARCHAR(100),EncashDays FLOAT,RJDate DATETIME)
		INSERT INTO @DATESAPPLIEDCOUNT
		SELECT distinct ID.Docdate,ID.VoucherNo,round(TD.dcAlpha22,2),round(dcAlpha7,2),round(TD.dcAlpha22,2)+round(dcAlpha7,2),
		--CONVERT(DATETIME,@FromDate),CONVERT(DATETIME,@ToDate)
		CONVERT(DATETIME,dcAlpha2),CONVERT(DATETIME,dcAlpha3)
		,0,ISNULL(dcAlpha16,'')
		,CASE WHEN MONTH(CONVERT(DATETIME,dcAlpha2))=MONTH(@FromDate) AND YEAR(CONVERT(DATETIME,dcAlpha2))=YEAR(@FromDate) THEN CONVERT(FLOAT,dcAlpha14) ELSE 0 END
		--,CONVERT(FLOAT,dcAlpha14) 
		,CONVERT(DATETIME,dcAlpha1) 
		FROM COM_DocTextData TD with(nolock)
		JOIN INV_DOCDETAILS ID with(nolock) on TD.InvDocDetailsID=ID.InvDocDetailsID
		JOIN COM_DocCCData DC with(nolock) on DC.InvDocDetailsID=TD.InvDocDetailsID
		WHERE LEN(dcAlpha2)<30 AND  LEN(dcAlpha3)<30
	AND ID.CostCenterID=40072 AND DC.DCCCNID51=@EmployeeID  AND ID.STATUSID NOT IN (372,376)
		AND ISDATE(dcAlpha2)=1 AND  ISDATE(dcAlpha3)=1 
		AND CONVERT(DATETIME,dcAlpha2) <= CONVERT(DATETIME,@ToDate)	

		
		UNION 

		SELECT DocDate,VoucherNo,0,0,0,CONVERT(DATETIME,dcAlpha3),CONVERT(DATETIME,dcAlpha3),0,'Yes',dcAlpha15,null FROM INV_DocDetails I WITH(NOLOCK)
		JOIN COM_DocCCData CC WITH(NOLOCK) ON CC.InvDocDetailsID=I.InvDocDetailsID
		JOIN COM_DocTextData T WITH(NOLOCK) ON T.InvDocDetailsID=I.InvDocDetailsID
		JOIN COM_DocNumData N WITH(NOLOCK) ON N.InvDocDetailsID=I.InvDocDetailsID
		JOIN COM_CC50052 C52 WITH(NOLOCK) ON C52.Name=dcAlpha12 AND C52.Name IN (SELECT distinct C52.Name VacationField
 FROM INV_DOCDETAILS ID WITH(NOLOCK) 
 JOIN COM_DOCTEXTDATA TD WITH(NOLOCK) ON ID.INVDOCDETAILSID=TD.INVDOCDETAILSID 
 JOIN COM_CC50052 C52 WITH(NOLOCK) ON C52.NodeID=TD.dcAlpha1
 WHERE ID.COSTCENTERID=40061 AND ID.StatusID=369	)
		WHERE I.CostCenterID=40095 AND dcAlpha1='2' AND CC.DCCCNID51=@EmployeeID AND I.STATUSID NOT IN (372,376)
		
		--select * from @DATESAPPLIEDCOUNT
	   --END: LOADING DATA BASED ON FROMDATE AND TODATE GIVEN				 
	   --START: UPDATING @TabDatesRange TABLE 'COUNT' COLUMN TO 1 FROM LIST OF @DATESAPPLIEDCOUNT TABLE
	   
	   DECLARE @RC AS INT,@IC AS INT,@TRC AS INT,@DTT AS DATETIME,@DAYS Float,@ED FLOAT
	   SET @IC=1
	   	  SELECT @TRC=COUNT(*) FROM @TabDatesRange
		  WHILE(@IC<=@TRC)
		  BEGIN
			SELECT @DTT=DATE1 FROM @TabDatesRange WHERE SNO=@IC
			SET @RC=0

			IF(select COUNT(*) from @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND RJDATE IS NULL)>0
				SELECT @RC=COUNT(*) FROM @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND RJDATE IS NULL
			ELSE
			BEGIN
				IF(select COUNT(*) from @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND CONVERT(DATETIME,RJDATE) <= CONVERT(DATETIME,TDATE) AND CONVERT(DATETIME,RJDATE)>CONVERT(DATETIME,@DTT) )>0
					SELECT @RC=COUNT(*) from @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND CONVERT(DATETIME,RJDATE) <= CONVERT(DATETIME,TDATE) AND CONVERT(DATETIME,RJDATE)>CONVERT(DATETIME,@DTT) 
				ELSE IF(select COUNT(*) from @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND CONVERT(DATETIME,RJDATE) > CONVERT(DATETIME,TDATE) AND CONVERT(DATETIME,RJDATE)>CONVERT(DATETIME,@DTT)  )>0
					SELECT @RC=COUNT(*) from @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND CONVERT(DATETIME,RJDATE) > CONVERT(DATETIME,TDATE) AND CONVERT(DATETIME,RJDATE)>CONVERT(DATETIME,@DTT) 
			END

			SELECT @ED=SUM(ISNULL(EncashDays,0)) FROM @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')='Yes'
			UPDATE @TabDatesRange SET count=ISNULL(@RC,0) WHERE CONVERT(DATETIME,DATE1)=CONVERT(DATETIME,@DTT)
			UPDATE @TabDatesRange SET FLAG=1,NOOFDAYS=@ED WHERE CONVERT(DATETIME,DATE1)=CONVERT(DATETIME,@DTT) and ISNULL(@RC,0)>0
		  SET @IC=@IC+1
		  END
		 
		--END :UPDATING @TabDatesRange TABLE 'COUNT' COLUMN TO 1 FROM LIST OF @DATESAPPLIEDCOUNT TABLE  
		
		--START WEEKLYOFF COUNT
		--LOADING WEEKLYOFF INFORMATION OF EMPLOYEE
		DECLARE @STRQUERY NVARCHAR(MAX),@I INT,@J INT,@COLNAME VARCHAR(15)
		CREATE TABLE #EMPWEEKLYOFF (WK11 varchar(50),WK12 varchar(50),WK21 varchar(50),WK22 varchar(50), WK31 varchar(50),
								   WK32 varchar(50),WK41 varchar(50),WK42 varchar(50),WK51 varchar(50),WK52 varchar(50),WEFDATE DATETIME)
		CREATE TABLE #EMPWEEKLYOFF1 (WK11 varchar(50),WK12 varchar(50),WK21 varchar(50),WK22 varchar(50), WK31 varchar(50),
								   WK32 varchar(50),WK41 varchar(50),WK42 varchar(50),WK51 varchar(50),WK52 varchar(50),WEFDATE DATETIME)											   
		CREATE TABLE #WEEKLYOFF  (WEEKLYWEEKOFFNO int,DAYNAME varchar(100),WeekNo INT,WkDate DATETIME,WEFDATE DATETIME)										   
		CREATE TABLE #WEEKLYOFF1  (WEEKLYWEEKOFFNO int,DAYNAME varchar(100),WeekNo INT,WkDate DATETIME,WEFDATE DATETIME)										   
		SET @STRQUERY=''	   
								   
		--LOADING DATA FROM WEEKLYOFF MASTER											   
		DECLARE @FD DATETIME,@TD DATETIME
		SELECT TOP 1  @FD=CONVERT(DATETIME,ID.DUEDATE)
			         FROM COM_DocCCData DC WITH(NOLOCK),INV_DOCDETAILS ID WITH(NOLOCK),COM_DocTextData TD WITH(NOLOCK)
		WHERE        DC.INVDOCDETAILSID=ID.INVDOCDETAILSID AND TD.INVDOCDETAILSID=ID.INVDOCDETAILSID AND ID.COSTCENTERID=40053 AND DC.dcCCNID51=@EmployeeID	
		             AND CONVERT(DATETIME,ID.DUEDATE)<=CONVERT(DATETIME,@FromDate)
		ORDER BY     CONVERT(DATETIME,ID.DUEDATE) DESC

		SELECT TOP 1  @TD=CONVERT(DATETIME,ID.DUEDATE)
			         FROM COM_DocCCData DC WITH(NOLOCK),INV_DOCDETAILS ID WITH(NOLOCK),COM_DocTextData TD WITH(NOLOCK)
		WHERE        DC.INVDOCDETAILSID=ID.INVDOCDETAILSID AND TD.INVDOCDETAILSID=ID.INVDOCDETAILSID AND ID.COSTCENTERID=40053 AND DC.dcCCNID51=@EmployeeID	
		             AND CONVERT(DATETIME,ID.DUEDATE)<=CONVERT(DATETIME,@ToDate)
		ORDER BY     CONVERT(DATETIME,ID.DUEDATE) DESC

								   
		--LOADING DATA FROM WEEKLYOFF MASTER											   
		INSERT INTO #EMPWEEKLYOFF 
		SELECT  TD.dcAlpha2 WK11,TD.dcAlpha3 WK12,TD.dcAlpha4 WK21,TD.dcAlpha5 WK22,TD.dcAlpha6 WK31,TD.dcAlpha7 WK32,TD.dcAlpha8 WK41,TD.dcAlpha9 WK42,
			         TD.dcAlpha10 WK51,TD.dcAlpha11 WK52,CONVERT(DATETIME,ID.DUEDATE)	FROM COM_DocCCData DC WITH(NOLOCK),INV_DOCDETAILS ID WITH(NOLOCK),COM_DocTextData TD WITH(NOLOCK)
		WHERE        DC.INVDOCDETAILSID=ID.INVDOCDETAILSID AND TD.INVDOCDETAILSID=ID.INVDOCDETAILSID AND ID.COSTCENTERID=40053 AND DC.dcCCNID51=@EmployeeID	AND ISNULL(TD.DCALPHA1,'No')='No'	
		             AND CONVERT(DATETIME,ID.DUEDATE)>=CONVERT(DATETIME,@FD)
		            AND CONVERT(DATETIME,ID.DUEDATE)<=CONVERT(DATETIME,@TD)
		ORDER BY     CONVERT(DATETIME,ID.DUEDATE) DESC
		--CHECKING FOR EMPLOYEE WEEKLY OFF COUNT FROM WEEKLYOFF MASTER IF NO DATA FOUND
		--LOADING DATA FROM EMPLOYEE MASTER
		IF (SELECT COUNT(*) FROM #EMPWEEKLYOFF)<=0
		BEGIN
			INSERT INTO #EMPWEEKLYOFF 
			SELECT WeeklyOff1,WeeklyOff2,WeeklyOff1,WeeklyOff2,WeeklyOff1,WeeklyOff2,WeeklyOff1,WeeklyOff2,
			       WeeklyOff1,WeeklyOff2,'01-01-1900'	FROM COM_CC50051 WITH(NOLOCK)
			WHERE  NODEID=@EmployeeID
			DELETE FROM #EMPWEEKLYOFF WHERE ISNULL(WK11,'None')='None' OR ISNULL(WK11,'0')='0'
			--EMPLOYEE MASTER
			SET @I=1
			SET @STRQUERY=''
			WHILE(@I<=5)
			BEGIN
				SET @J=1
				WHILE(@J<=2)
				BEGIN
					SET @COLNAME='WK'+CONVERT(VARCHAR,@I)+CONVERT(VARCHAR,@J)
					SET @STRQUERY=@STRQUERY+' UPDATE #EMPWEEKLYOFF SET '+ @COLNAME +'='''' where '+ @COLNAME +'=''None'''
					
				SET @J=@J+1
				END
			SET @I=@I+1
			END
			--PRINT @STRQUERY
			EXEC (@STRQUERY)
		END
		ELSE
		BEGIN
			INSERT INTO #EMPWEEKLYOFF1  SELECT * FROM #EMPWEEKLYOFF
			--SET NULL
			IF (SELECT COUNT(*) FROM #EMPWEEKLYOFF1)>0
			BEGIN
				SET @I=1
				SET @STRQUERY=''
				WHILE(@I<=5)
				BEGIN
					SET @J=1
					WHILE(@J<=2)
					BEGIN
						SET @COLNAME='WK'+CONVERT(VARCHAR,@I)+CONVERT(VARCHAR,@J)
						SET @STRQUERY=@STRQUERY+' update #EMPWEEKLYOFF1 set '+ @COLNAME +'='''' where '+ @COLNAME +'=''None'''
						
					SET @J=@J+1
					END
				SET @I=@I+1
				END
				--PRINT @STRQUERY
				EXEC (@STRQUERY)
			END
			--EMPLOYEE MASTER
			IF((SELECT COUNT(*) FROM COM_CC50051 WHERE NODEID=@EmployeeID AND (ISNULL(WeeklyOff1,'')<>'' AND ISNULL(WeeklyOff1,'None')<>'None') AND (ISNULL(WeeklyOff2,'')<>'' AND ISNULL(WeeklyOff2,'None')<>'None'))>0)
			BEGIN
				SET @I=1
				SET @STRQUERY=''
				WHILE(@I<=5)
				BEGIN
					SET @J=1
					WHILE(@J<=2)
					BEGIN
						SET @COLNAME='WK'+CONVERT(VARCHAR,@I)+CONVERT(VARCHAR,@J)
						SET @STRQUERY=@STRQUERY+' UPDATE #EMPWEEKLYOFF1 SET '+ @COLNAME +'=WeeklyOff'+CONVERT(VARCHAR,@J)+' FROM COM_CC50051 WITH(NOLOCK)	WHERE  NODEID='+CONVERT(VARCHAR,@EmployeeID) +' AND ISNULL('+ @COLNAME +','''')=''''  AND ISNULL(WeeklyOff'+CONVERT(VARCHAR,@J)+',''None'')<>''None'''
					SET @J=@J+1
					END
				SET @I=@I+1
				END
				--PRINT @STRQUERY
				EXEC (@STRQUERY)
			END
			ELSE
			BEGIN
				--GLOBAL PREFERENCE
				SET @I=1
				SET @STRQUERY=''
				WHILE(@I<=5)
				BEGIN
					SET @J=1
					WHILE(@J<=2)
					BEGIN
						SET @COLNAME='WK'+CONVERT(VARCHAR,@I)+CONVERT(VARCHAR,@J)
						--SET @STRQUERY=@STRQUERY+' update #EMPWEEKLYOFF set '+ @COLNAME +'='''' where '+ @COLNAME +'=''None'''
						SET @STRQUERY=@STRQUERY+' UPDATE #EMPWEEKLYOFF1 SET '+ @COLNAME +'=isnull(VALUE,'''') FROM ADM_GlobalPreferences WITH(NOLOCK)	WHERE  NAME=''WeeklyOff'+CONVERT(VARCHAR,@J)+''' AND ISNULL('+ @COLNAME +','''')=''''  AND ISNULL(VALUE,''None'')<>''None'''
					SET @J=@J+1
					END
				SET @I=@I+1
				END
				--PRINT @STRQUERY
				EXEC (@STRQUERY)
			END
		END
		--CHECKING FOR EMPLOYEE WEEKLY OFF COUNT FROM EMPLOYEE MASTER IF NO DATA FOUND
		--LOADING DATA FROM PREFERENCES
		DECLARE @FROMWEEKOFDEF BIT
		IF (SELECT COUNT(*) FROM #EMPWEEKLYOFF)<=0
		BEGIN
			INSERT INTO #WEEKLYOFF 
			SELECT case isnull(VALUE,'') when '' then 0 else 1 end,VALUE, 0, null,'01-01-1900' FROM ADM_GlobalPreferences  WHERE NAME='WeeklyOff1'
			UNION ALL
			SELECT case isnull(VALUE,'') when '' then 0 else 1 end,VALUE, 0, null,'01-01-1900'	FROM ADM_GlobalPreferences  WHERE NAME='WeeklyOff2'
			UNION ALL
			SELECT case isnull(VALUE,'') when '' then 0 else 2 end,VALUE, 0, null,'01-01-1900'	FROM ADM_GlobalPreferences  WHERE NAME='WeeklyOff1'
			UNION ALL
			SELECT case isnull(VALUE,'') when '' then 0 else 2 end,VALUE, 0, null,'01-01-1900'	FROM ADM_GlobalPreferences  WHERE NAME='WeeklyOff2'					  
			UNION ALL
			SELECT case isnull(VALUE,'') when '' then 0 else 3 end,VALUE, 0, null,'01-01-1900'	FROM ADM_GlobalPreferences  WHERE NAME='WeeklyOff1'
			UNION ALL
			SELECT case isnull(VALUE,'') when '' then 0 else 3 end,VALUE, 0, null,'01-01-1900'	FROM ADM_GlobalPreferences  WHERE NAME='WeeklyOff2'					  
			UNION ALL
			SELECT case isnull(VALUE,'') when '' then 0 else 4 end,VALUE, 0, null,'01-01-1900'	FROM ADM_GlobalPreferences  WHERE NAME='WeeklyOff1'
			UNION ALL
			SELECT case isnull(VALUE,'') when '' then 0 else 4 end,VALUE, 0, null,'01-01-1900'	FROM ADM_GlobalPreferences  WHERE NAME='WeeklyOff2'					  
			UNION ALL
			SELECT case isnull(VALUE,'') when '' then 0 else 5 end,VALUE, 0, null,'01-01-1900'	FROM ADM_GlobalPreferences  WHERE NAME='WeeklyOff1'
			UNION ALL
			SELECT case isnull(VALUE,'') when '' then 0 else 5 end,VALUE, 0, null,'01-01-1900'	FROM ADM_GlobalPreferences  WHERE NAME='WeeklyOff2'		
		END
						
		--LOADING WEEKNO AND DAYNAME INTO ROWS FROM #EMPWEEKLYOFF TABLE (WEEKLYOFF AND EMPLOYEE MASTER)
		IF (SELECT COUNT(*) FROM #WEEKLYOFF)<=0
		BEGIN
			INSERT INTO #WEEKLYOFF
				select case isnull(WK11,'') when '' then 0 else 1 end,case isnull(WK11,'') when '' then '' else WK11 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF 
			UNION ALL
				select case isnull(WK12,'') when '' then 0 else 1 end,case isnull(WK12,'') when '' then '' else WK12 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF 
			UNION ALL
				select case isnull(WK21,'') when '' then 0 else 2 end,case isnull(WK21,'') when '' then '' else WK21 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF 
			UNION ALL
				select case isnull(WK22,'') when '' then 0 else 2 end,case isnull(WK22,'') when '' then '' else WK22 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF 
			UNION ALL
				select case isnull(WK31,'') when '' then 0 else 3 end,case isnull(WK31,'') when '' then '' else WK31 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF 
			UNION ALL
				select case isnull(WK32,'') when '' then 0 else 3 end,case isnull(WK32,'') when '' then '' else WK32 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF 
			UNION ALL
				select case isnull(WK41,'') when '' then 0 else 4 end,case isnull(WK41,'') when '' then '' else WK41 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF 
			UNION ALL
				select case isnull(WK42,'') when '' then 0 else 4 end,case isnull(WK42,'') when '' then '' else WK42 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF 
			UNION ALL
				select case isnull(WK51,'') when '' then 0 else 5 end,case isnull(WK51,'') when '' then '' else WK51 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF 
			UNION ALL
				select case isnull(WK52,'') when '' then 0 else 5 end,case isnull(WK52,'') when '' then '' else WK52 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF 
		END
		IF((SELECT COUNT(*) FROM #EMPWEEKLYOFF1)>0)
		BEGIN	
		SET @FROMWEEKOFDEF=1
			INSERT INTO #WEEKLYOFF1
				select case isnull(WK11,'') when '' then 0 else 1 end,case isnull(WK11,'') when '' then '' else WK11 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF1 
			UNION ALL
				select case isnull(WK12,'') when '' then 0 else 1 end,case isnull(WK12,'') when '' then '' else WK12 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF1
			UNION ALL
				select case isnull(WK21,'') when '' then 0 else 2 end,case isnull(WK21,'') when '' then '' else WK21 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF1 
			UNION ALL
				select case isnull(WK22,'') when '' then 0 else 2 end,case isnull(WK22,'') when '' then '' else WK22 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF1 
			UNION ALL
				select case isnull(WK31,'') when '' then 0 else 3 end,case isnull(WK31,'') when '' then '' else WK31 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF1 
			UNION ALL
				select case isnull(WK32,'') when '' then 0 else 3 end,case isnull(WK32,'') when '' then '' else WK32 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF1 
			UNION ALL
				select case isnull(WK41,'') when '' then 0 else 4 end,case isnull(WK41,'') when '' then '' else WK41 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF1 
			UNION ALL
				select case isnull(WK42,'') when '' then 0 else 4 end,case isnull(WK42,'') when '' then '' else WK42 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF1 
			UNION ALL
				select case isnull(WK51,'') when '' then 0 else 5 end,case isnull(WK51,'') when '' then '' else WK51 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF1 
			UNION ALL
				select case isnull(WK52,'') when '' then 0 else 5 end,case isnull(WK52,'') when '' then '' else WK52 end, 0, null,convert(Datetime,WEFDATE) FROM #EMPWEEKLYOFF1 
		END
		--LOADING WEEKDATE,DAYNAME AND WEEKNO FOR SELECTED DATERANGE
		Declare @WEEKOFFCOUNT Table (ID BigInt ,WEEKDATE DateTime,DAYNAME Varchar(50),WEEKNO Int,COUNT Int,WEEKNOMANUAL Int)
		Declare @STARTDATE DateTime,@STARTDATE2 DateTime,@ENDATE2 DateTime
		Declare @MRC2 AS Int,@MC2 AS Int,@MID2 Int
		
		SET @MC2=1
		SELECT @MRC2=COUNT(*) FROM @MonthTab
		WHILE (@MC2<=@MRC2)
		BEGIN
			SELECT @STARTDATE2=CONVERT(DateTime,STDATE),@ENDATE2=CONVERT(DateTime,EDDATE) FROM @MonthTab WHERE ID=@MC2
			;WITH DATERANGE AS
			(
			SELECT @STARTDATE2 AS DT,1 AS ID
			UNION ALL
			SELECT DATEADD(DD,1,DT),DATERANGE.ID+1 FROM DATERANGE WHERE ID<=DATEDIFF("d",convert(Varchar,@STARTDATE2,101),convert(Varchar,@ENDATE2,101))
			)
			
			INSERT INTO @WEEKOFFCOUNT
			SELECT ROW_NUMBER() OVER (ORDER BY DT) AS ID,DT AS WEEKDATE,DATENAME(DW,DT) AS DAY,0,0,0 FROM DATERANGE	--WHERE (DATEPART(DW,DT)=1 OR DATEPART(DW,DT)=7)
		SET @MC2=@MC2+1
		END
			
		--UPDATING WEEKNO IN WEEKOFFCOUNT Table BASED ON WEEKDATE OF MONTH
		--UPDATE @WEEKOFFCOUNT SET WEEKNO=((datepart(day,WEEKDATE)-1)/7)+1
		--------------------
						declare @PMS int,@PME int
						select @PMS=Value From ADM_GlobalPreferences where name='PayDayStart'
						select @PME=Value From ADM_GlobalPreferences where name='PayDayEnd'

						declare @PS INT,@PE INT
						declare @wd datetime,@TSwd datetime,@TEwd datetime,@dme datetime
						declare @wno int
						set @wno=0
						select @TSwd=MIN(Weekdate),@TEwd=MAX(Weekdate) FROM @WEEKOFFCOUNT
						--SET @TSwd='01-Nov-2019' SET @TEwd='01-Dec-2019'
						WHILE(@TSwd<=@TEwd)
						BEGIN
							IF(DAY(@TSwd)=@PMS)
							BEGIN
								set @wno=1
								Update @WEEKOFFCOUNT SET WEEKNo=@wno WHERE WeekDate=@TSwd
								set @dme=dateadd(day,-1,dateadd(m,1,@TSwd))
								
								Update @WEEKOFFCOUNT SET WEEKNo=@wno 
								where WeekDate between @TSwd AND DATEADD(day,6,@TSwd)
								
								SET @TSwd=DATEADD(day,7,@TSwd)
								set @wno=@wno+1
							END
							ELSE
							BEGIN
								if(@wno=0)
									SET @TSwd=DATEADD(day,1,@TSwd)
								else
								begin
									IF(DAY(DATEADD(day,6,@TSwd))<=@PME)
									begin
										Update @WEEKOFFCOUNT SET WEEKNo=@wno 
										where WeekDate between @TSwd AND DATEADD(day,6,@TSwd)
										SET @TSwd=DATEADD(day,7,@TSwd)
										set @wno=@wno+1

										if(DATEADD(day,6,@TSwd)>@dme)
										BEGIN
											Update @WEEKOFFCOUNT SET WEEKNo=@wno 
											where WeekDate between @TSwd AND @dme
											SET @TSwd=DATEADD(day,1,@dme)
										END
										
									end
									else 
									begin
										Update @WEEKOFFCOUNT SET WEEKNo=@wno 
										where WeekDate between @TSwd AND @dme
										SET @TSwd=DATEADD(day,1,@dme)
									end
									
								end
							END	
							
						END 

		--------------------------
		--UPDATING COUNT TO 1 IF WEEKNO AND DAYNAME IS WEEKLYOFF
		IF(@FROMWEEKOFDEF=1)
		BEGIN
			
			UPDATE WEEKOFFCOUNT SET WEEKOFFCOUNT.count=1 FROM @WEEKOFFCOUNT WEEKOFFCOUNT 
			inner join #WEEKLYOFF WEEKLYOFF on WEEKLYOFF.WEEKLYWEEKOFFNO=WEEKOFFCOUNT.WEEKNO  
			AND upper(WEEKLYOFF.DAYNAME)=upper(WEEKOFFCOUNT.DAYNAME) --AND WEEKOFFCOUNT.WEEKDATE=WEEKLYOFF.WKDATE
			AND WeekDate Between @FromDate AND @ToDate AND WEEKLYOFF.WEFDate=(
			SELECT TOP 1  CONVERT(DATETIME,ID.DUEDATE)
							FROM COM_DocCCData DC WITH(NOLOCK),INV_DOCDETAILS ID WITH(NOLOCK),COM_DocTextData TD WITH(NOLOCK)
			WHERE        DC.INVDOCDETAILSID=ID.INVDOCDETAILSID AND TD.INVDOCDETAILSID=ID.INVDOCDETAILSID AND ID.COSTCENTERID=40053 AND DC.dcCCNID51=@EmployeeID AND ISNULL(TD.DCALPHA1,'No')='No'	
							AND CONVERT(DATETIME,ID.DUEDATE)<=CONVERT(DATETIME,WEEKOFFCOUNT.WeekDate)
			ORDER BY     CONVERT(DATETIME,ID.DUEDATE) DESC
			)

		END
		ELSE
		BEGIN
			UPDATE WEEKOFFCOUNT SET WEEKOFFCOUNT.count=1 FROM @WEEKOFFCOUNT WEEKOFFCOUNT inner join #WEEKLYOFF WEEKLYOFF on WEEKLYOFF.WEEKLYWEEKOFFNO=WEEKOFFCOUNT.WEEKNO  AND upper(WEEKLYOFF.DAYNAME)=upper(WEEKOFFCOUNT.DAYNAME) 
		END
			----------------------- 
		--END WEEKLYOFF COUNT

		--START : UPDATING @DATESAPPLIEDCOUNT Table 'COUNT' COLUMN TO '3- FOR WEEKLYOFF' AND '4- FOR HOLIDAY'
		UPDATE DATESCOUNT SET DATESCOUNT.count=3 FROM @WEEKOFFCOUNT WEEKOFFCOUNT inner join @TabDatesRange DATESCOUNT on CONVERT(DateTime,DATESCOUNT.date1)= CONVERT(DateTime,WEEKOFFCOUNT.weekdate) and WEEKOFFCOUNT.count=1
		IF EXISTS(SELECT SYSCOLUMNNAME FROM ADM_COSTCENTERDEF WITH(NOLOCK) WHERE COSTCENTERID=40051 AND ISCOLUMNINUSE=1 AND SYSCOLUMNNAME ='DCCCNID2')
		BEGIN
			 UPDATE DATESCOUNT SET DATESCOUNT.count=4
			 FROM @TabDatesRange DATESCOUNT inner join COM_DocTextData TD on CONVERT(DATETIME,DATESCOUNT.DATE1)=CONVERT(DATETIME,TD.dcAlpha1)
			 inner join INV_DOCDETAILS ID  on  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID 
			 inner join COM_DocCCData CC  on  ID.INVDOCDETAILSID=CC.INVDOCDETAILSID
			 and ISDATE(TD.dcAlpha1)=1 AND CC.DCCCNID2=@LocID AND ID.STATUSID=369
			 AND CONVERT(DATETIME,DATE1) = CONVERT(DATETIME,TD.dcAlpha1) AND ID.COSTCENTERID=40051
		END
		ELSE
		BEGIN
			 UPDATE DATESCOUNT SET DATESCOUNT.count=4
			 FROM @TabDatesRange DATESCOUNT inner join COM_DocTextData TD on CONVERT(DATETIME,DATESCOUNT.DATE1)=CONVERT(DATETIME,TD.dcAlpha1)
			 inner join INV_DOCDETAILS ID  on  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID and ISDATE(TD.dcAlpha1)=1
			 AND CONVERT(DATETIME,DATE1) = CONVERT(DATETIME,TD.dcAlpha1) AND ID.COSTCENTERID=40051 AND ID.STATUSID=369
		END	
		UPDATE DATESCOUNT SET DATESCOUNT.count=4 FROM @TabDatesRange DATESCOUNT inner join COM_DocTextData TD on CONVERT(DateTime,DATESCOUNT.DATE1)=CONVERT(DateTime,TD.dcAlpha1) inner join INV_DOCDETAILS ID  on  ID.INVDOCDETAILSID=TD.INVDOCDETAILSID and ISDATE(TD.dcAlpha1)=1 AND CONVERT(DateTime,DATE1) = CONVERT(DateTime,TD.dcAlpha1) AND ID.COSTCENTERID=40051
		--END : UPDATING @DATESAPPLIEDCOUNT Table 'COUNT' COLUMN TO '3- FOR WEEKLYOFF' AND '4- FOR HOLIDAY'
		
		SET @IC=1
		SELECT @TRC=COUNT(*) FROM @TabDatesRange
		WHILE(@IC<=@TRC)
		BEGIN
			SET @ED=0
			SELECT @DTT=DATE1 FROM @TabDatesRange WHERE SNO=@IC
			SET @RC=0

			IF(select COUNT(*) from @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND RJDATE IS NULL)>0
				SELECT @RC=COUNT(*) FROM @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND RJDATE IS NULL
			ELSE
			BEGIN
				IF(select COUNT(*) from @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND CONVERT(DATETIME,RJDATE) <= CONVERT(DATETIME,TDATE) AND CONVERT(DATETIME,RJDATE)>CONVERT(DATETIME,@DTT) )>0
					SELECT @RC=COUNT(*) from @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND CONVERT(DATETIME,RJDATE) <= CONVERT(DATETIME,TDATE) AND CONVERT(DATETIME,RJDATE)>CONVERT(DATETIME,@DTT) 
				ELSE IF(select COUNT(*) from @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND CONVERT(DATETIME,RJDATE) > CONVERT(DATETIME,TDATE) AND CONVERT(DATETIME,RJDATE)>CONVERT(DATETIME,@DTT)  )>0
					SELECT @RC=COUNT(*) from @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND ISNULL(IsEncashDays,'')<>'Yes' AND CONVERT(DATETIME,RJDATE) > CONVERT(DATETIME,TDATE) AND CONVERT(DATETIME,RJDATE)>CONVERT(DATETIME,@DTT) 
			END

			SELECT @ED=SUM(ISNULL(EncashDays,0)) FROM @DATESAPPLIEDCOUNT WHERE CONVERT(DATETIME,@DTT) between CONVERT(DATETIME,FDATE) and CONVERT(DATETIME,TDATE) AND IsEncashDays='Yes'
			IF ISNULL(@INCREXC,'')='IncludeHolidays' OR ISNULL(@INCREXC,'')='ExcludeWeeklyOffs'
				UPDATE @TabDatesRange SET FLAG=0,IncExc='EW' WHERE CONVERT(DATETIME,DATE1)=CONVERT(DATETIME,@DTT) and ISNULL(@RC,0)>0 AND COUNT=3
			ELSE IF ISNULL(@INCREXC,'')='IncludeWeeklyOffs' OR ISNULL(@INCREXC,'')='ExcludeHolidays'
				UPDATE @TabDatesRange SET FLAG=0,IncExc='EH' WHERE CONVERT(DATETIME,DATE1)=CONVERT(DATETIME,@DTT) and ISNULL(@RC,0)>0 AND COUNT=4
			ELSE IF ISNULL(@INCREXC,'')='IncludeBoth'
				UPDATE @TabDatesRange SET FLAG=1 WHERE CONVERT(DATETIME,DATE1)=CONVERT(DATETIME,@DTT) and ISNULL(@RC,0)>0
			ELSE IF ISNULL(@INCREXC,'')='ExcludeBoth'
				UPDATE @TabDatesRange SET FLAG=0,IncExc='EB' WHERE CONVERT(DATETIME,DATE1)=CONVERT(DATETIME,@DTT) and ISNULL(@RC,0)>0 AND COUNT IN (3,4)
			
			IF(ISNULL(@ED,0)>0)
			UPDATE @TabDatesRange SET NOOFDAYS=ISNULL(@ED,0),FLAG=100 WHERE CONVERT(DATETIME,DATE1)=CONVERT(DATETIME,@DTT)

		SET @IC=@IC+1
		END
		--
UPDATE @DATESAPPLIEDCOUNT SET NOOFDAYS=(SELECT COUNT(*) FROM @TabDatesRange WHERE FLAG=1 AND count>=1 and isnull(IncExc,'')='') WHERE IsEncashDays<>'Yes'	--COUNT=1)
--UPDATE @DATESAPPLIEDCOUNT SET NOOFDAYS=(SELECT COUNT(*) FROM @TabDatesRange WHERE FLAG=1 AND count>=1 and isnull(IncExc,'')='')--COUNT=1)

IF EXISTS(SELECT SNO FROM @TabDatesRange WHERE FLAG=100)
	UPDATE @DATESAPPLIEDCOUNT SET NOOFDAYS=(SELECT SUM(NOOFDAYS) FROM @TabDatesRange WHERE FLAG=100) WHERE IsEncashDays='Yes'

SELECT @MWKOFFS=COUNT(*) FROM @TabDatesRange WHERE convert(DATETIME,date1) between CONVERT(DATETIME,@FromDate) and CONVERT(DATETIME,@ToDate) and flag=1 and COUNT=3 
SELECT @MHDAYS=COUNT(*) FROM @TabDatesRange WHERE convert(DATETIME,date1) between CONVERT(DATETIME,@FromDate) and CONVERT(DATETIME,@ToDate) and flag=1 and COUNT=4

--select * from @DATESAPPLIEDCOUNT
IF(@RptMode=0)
BEGIN
	--SELECT *,@MWKOFFS MWeeklyoff,@MHDAYS MHolidays From @DATESAPPLIEDCOUNT 
	--set @LeavesTakenOP=(SELECT  SUM(ISNULL(NOOFDAYS,0)) FROM @DATESAPPLIEDCOUNT )
	set @LeavesTakenOP=ISNULL((SELECT TOP 1 NOOFDAYS FROM @DATESAPPLIEDCOUNT  WHERE IsEncashDays<>'Yes'),0)
	set @LeavesTakenEncash=ISNULL((SELECT TOP 1 ISNULL(NOOFDAYS,0) FROM @DATESAPPLIEDCOUNT  WHERE IsEncashDays='Yes'),0)
	set @LeavesTakenEncash+= ISNULL((SELECT TOP 1 ISNULL(EncashDays,0) FROM @DATESAPPLIEDCOUNT  WHERE IsEncashDays<>'Yes' ORDER BY ISNULL(EncashDays,0) DESC),0)
	--set @LeavesTakenEncash=(SELECT TOP 1 NOOFDAYS FROM @DATESAPPLIEDCOUNT  WHERE IsEncashDays='Yes')
END
ELSE
BEGIN
	DECLARE @RPTNOOFDAYS FLOAT
	SELECT @RPTNOOFDAYS=NOOFDAYS From @DATESAPPLIEDCOUNT
	RETURN @RPTNOOFDAYS
END

--select ISNULL(@LeavesTakenOP,0),ISNULL(@LeavesTakenEncash,0)
  
DROP TABLE #EMPWEEKLYOFF
DROP TABLE #EMPWEEKLYOFF1
DROP TABLE #WEEKLYOFF
DROP TABLE #WEEKLYOFF1	
END					
END
GO
