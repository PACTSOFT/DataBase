USE PACT2C222
GO
SET ANSI_NULLS, QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[spADM_GetSchemeScreenDetails]
	@Type [int],
	@PriceChartID [bigint],
	@UserID [bigint],
	@LangID [int] = 1
WITH ENCRYPTION, EXECUTE AS CALLER
AS
--BEGIN TRANSACTION  
BEGIN TRY  
SET NOCOUNT ON;

	IF @Type=0 /*TO GET SCREEN DETAILS*/
	BEGIN
		SELECT FEATUREID ID,NAME FROM ADM_FEATURES WITH(NOLOCK) 
		WHERE (FEATUREID>50000 and featureid<=50050 OR FEATUREID=2)  and ISEnabled=1

		SELECT ProfileID,ProfileName FROM [ADM_SchemesDiscounts] WITH(NOLOCK)
		where ProfileID>0
		GROUP BY ProfileID,ProfileName
		ORDER BY ProfileName
		
		 SELECT S.StatusID,R.ResourceData AS Status,Status as ActualStatus                              
		 FROM COM_Status S WITH(NOLOCK)                              
		 LEFT JOIN COM_LanguageResources R WITH(NOLOCK) ON S.ResourceID=R.ResourceID AND R.LanguageID=@LangID                              
		 WHERE CostCenterID = 151  
  

		SELECT [Value] FROM ADM_GlobalPreferences WHERE [Name]='SchemeFields'

		select SysColumnName,(SELECT TOP 1 ResourceData FROM COM_LanguageResources WHERE LanguageID=@LangID AND ResourceID=C.ResourceID) ResourceData FROM ADM_CostCenterDef C
		WHERE CostCenterID=3 AND (SysColumnName LIKE 'PurchaseRate%' OR SysColumnName LIKE 'SellingRate%' 
		OR SysColumnName LIKE 'ReorderLevel%' OR SysColumnName LIKE 'ReorderQty%')
		ORDER BY SysColumnName
	END
	ELSE IF @Type=2 /*TO GET PROFILE DATA BY PROFILEID*/
	BEGIN
			SELECT DISTINCT P.ProductCode,
			P.ProductName,CONVERT(DATETIME,T.FromDate) Fromdt,CONVERT(DATETIME,T.ToDate) Todt,
			T.*,
			(SELECT TOP 1 UnitName FROM COM_UOM WITH(NOLOCK) WHERE UOMID=T.UOMID AND T.UOMID>0) UOMName,
			(SELECT TOP 1 AccountName FROM ACC_Accounts WITH(NOLOCK) WHERE AccountID=T.AccountID AND T.AccountID!=0) AccountName,
			(SELECT TOP 1 Name FROM COM_Division WITH(NOLOCK) WHERE NodeID=T.CCNID1 AND T.CCNID1>0) CC1,
			(SELECT TOP 1 Name FROM COM_Location WITH(NOLOCK) WHERE NodeID=T.CCNID2 AND T.CCNID2>0) CC2,
			(SELECT TOP 1 Name FROM COM_Branch WITH(NOLOCK) WHERE NodeID=T.CCNID3 AND T.CCNID3>0) CC3,
			(SELECT TOP 1 Name FROM COM_Department WITH(NOLOCK) WHERE NodeID=T.CCNID4 AND T.CCNID4>0) CC4,
			(SELECT TOP 1 Name FROM COM_Salesman WITH(NOLOCK) WHERE NodeID=T.CCNID5 AND T.CCNID5>0) CC5,
			(SELECT TOP 1 Name FROM COM_Category WITH(NOLOCK) WHERE NodeID=T.CCNID6 AND T.CCNID6>0) CC6,
			(SELECT TOP 1 Name FROM COM_Area WITH(NOLOCK) WHERE NodeID=T.CCNID7 AND T.CCNID7>0) CC7,
			(SELECT TOP 1 Name FROM COM_Teritory WITH(NOLOCK) WHERE NodeID=T.CCNID8 AND T.CCNID8>0) CC8,
			(SELECT TOP 1 Name FROM COM_CC50009 WITH(NOLOCK) WHERE NodeID=T.CCNID9 AND T.CCNID9>0) CC9,
			(SELECT TOP 1 Name FROM COM_CC50010 WITH(NOLOCK) WHERE NodeID=T.CCNID10 AND T.CCNID10>0) CC10,
			(SELECT TOP 1 Name FROM COM_CC50011 WITH(NOLOCK) WHERE NodeID=T.CCNID11 AND T.CCNID11>0) CC11,
			(SELECT TOP 1 Name FROM COM_CC50012 WITH(NOLOCK) WHERE NodeID=T.CCNID12 AND T.CCNID12>0) CC12,
			(SELECT TOP 1 Name FROM COM_CC50013 WITH(NOLOCK) WHERE NodeID=T.CCNID13 AND T.CCNID13>0) CC13,
			(SELECT TOP 1 Name FROM COM_CC50014 WITH(NOLOCK) WHERE NodeID=T.CCNID14 AND T.CCNID14>0) CC14,
			(SELECT TOP 1 Name FROM COM_CC50015 WITH(NOLOCK) WHERE NodeID=T.CCNID15 AND T.CCNID15>0) CC15,
			(SELECT TOP 1 Name FROM COM_CC50016 WITH(NOLOCK) WHERE NodeID=T.CCNID16 AND T.CCNID16>0) CC16,
			(SELECT TOP 1 Name FROM COM_CC50017 WITH(NOLOCK) WHERE NodeID=T.CCNID17 AND T.CCNID17>0) CC17,
			(SELECT TOP 1 Name FROM COM_CC50018 WITH(NOLOCK) WHERE NodeID=T.CCNID18 AND T.CCNID18>0) CC18,
			(SELECT TOP 1 Name FROM COM_CC50019 WITH(NOLOCK) WHERE NodeID=T.CCNID19 AND T.CCNID19>0) CC19,
			(SELECT TOP 1 Name FROM COM_CC50020 WITH(NOLOCK) WHERE NodeID=T.CCNID20 AND T.CCNID20>0) CC20,
			(SELECT TOP 1 Name FROM COM_CC50021 WITH(NOLOCK) WHERE NodeID=T.CCNID21 AND T.CCNID21>0) CC21,
			(SELECT TOP 1 Name FROM COM_CC50022 WITH(NOLOCK) WHERE NodeID=T.CCNID22 AND T.CCNID22>0) CC22,
			(SELECT TOP 1 Name FROM COM_CC50023 WITH(NOLOCK) WHERE NodeID=T.CCNID23 AND T.CCNID23>0) CC23,
			(SELECT TOP 1 Name FROM COM_CC50024 WITH(NOLOCK) WHERE NodeID=T.CCNID24 AND T.CCNID24>0) CC24,
			(SELECT TOP 1 Name FROM COM_CC50025 WITH(NOLOCK) WHERE NodeID=T.CCNID25 AND T.CCNID25>0) CC25,
			(SELECT TOP 1 Name FROM COM_CC50026 WITH(NOLOCK) WHERE NodeID=T.CCNID26 AND T.CCNID26>0) CC26,
			(SELECT TOP 1 Name FROM COM_CC50027 WITH(NOLOCK) WHERE NodeID=T.CCNID27 AND T.CCNID27>0) CC27,
			(SELECT TOP 1 Name FROM COM_CC50028 WITH(NOLOCK) WHERE NodeID=T.CCNID28 AND T.CCNID28>0) CC28,
			(SELECT TOP 1 Name FROM COM_CC50029 WITH(NOLOCK) WHERE NodeID=T.CCNID29 AND T.CCNID29>0) CC29,

			(SELECT TOP 1 Name FROM COM_CC50030 WITH(NOLOCK) WHERE NodeID=T.CCNID30 AND T.CCNID30>0) CC30,
			(SELECT TOP 1 Name FROM COM_CC50031 WITH(NOLOCK) WHERE NodeID=T.CCNID31 AND T.CCNID31>0) CC31,
			(SELECT TOP 1 Name FROM COM_CC50032 WITH(NOLOCK) WHERE NodeID=T.CCNID32 AND T.CCNID32>0) CC32,
			(SELECT TOP 1 Name FROM COM_CC50033 WITH(NOLOCK) WHERE NodeID=T.CCNID33 AND T.CCNID33>0) CC33,
			(SELECT TOP 1 Name FROM COM_CC50034 WITH(NOLOCK) WHERE NodeID=T.CCNID34 AND T.CCNID34>0) CC34,
			(SELECT TOP 1 Name FROM COM_CC50035 WITH(NOLOCK) WHERE NodeID=T.CCNID35 AND T.CCNID35>0) CC35,
			(SELECT TOP 1 Name FROM COM_CC50036 WITH(NOLOCK) WHERE NodeID=T.CCNID36 AND T.CCNID36>0) CC36,
			(SELECT TOP 1 Name FROM COM_CC50037 WITH(NOLOCK) WHERE NodeID=T.CCNID37 AND T.CCNID37>0) CC37,
			(SELECT TOP 1 Name FROM COM_CC50038 WITH(NOLOCK) WHERE NodeID=T.CCNID38 AND T.CCNID38>0) CC38,
			(SELECT TOP 1 Name FROM COM_CC50039 WITH(NOLOCK) WHERE NodeID=T.CCNID39 AND T.CCNID39>0) CC39,

			(SELECT TOP 1 Name FROM COM_CC50040 WITH(NOLOCK) WHERE NodeID=T.CCNID40 AND T.CCNID40>0) CC40,
			(SELECT TOP 1 Name FROM COM_CC50041 WITH(NOLOCK) WHERE NodeID=T.CCNID41 AND T.CCNID41>0) CC41,
			(SELECT TOP 1 Name FROM COM_CC50042 WITH(NOLOCK) WHERE NodeID=T.CCNID42 AND T.CCNID42>0) CC42,
			(SELECT TOP 1 Name FROM COM_CC50043 WITH(NOLOCK) WHERE NodeID=T.CCNID43 AND T.CCNID43>0) CC43,
			(SELECT TOP 1 Name FROM COM_CC50044 WITH(NOLOCK) WHERE NodeID=T.CCNID44 AND T.CCNID44>0) CC44,
			(SELECT TOP 1 Name FROM COM_CC50045 WITH(NOLOCK) WHERE NodeID=T.CCNID45 AND T.CCNID45>0) CC45,
			(SELECT TOP 1 Name FROM COM_CC50046 WITH(NOLOCK) WHERE NodeID=T.CCNID46 AND T.CCNID46>0) CC46,
			(SELECT TOP 1 Name FROM COM_CC50047 WITH(NOLOCK) WHERE NodeID=T.CCNID47 AND T.CCNID47>0) CC47,
			(SELECT TOP 1 Name FROM COM_CC50048 WITH(NOLOCK) WHERE NodeID=T.CCNID48 AND T.CCNID48>0) CC48,
			(SELECT TOP 1 Name FROM COM_CC50049 WITH(NOLOCK) WHERE NodeID=T.CCNID49 AND T.CCNID49>0) CC49,
			(SELECT TOP 1 Name FROM COM_CC50050 WITH(NOLOCK) WHERE NodeID=T.CCNID50 AND T.CCNID50>0) CC50
			  
			FROM [ADM_SchemesDiscounts] T WITH(NOLOCK)
			INNER JOIN 	INV_Product P WITH(NOLOCK) ON P.ProductID=T.ProductID	
			WHERE T.ProfileID=@PriceChartID
			
			SELECT P.ProductCode,
			P.ProductName,s.Percentage,s.ProductID,s.Quantity,s.SchemeID,s.Value,s.IsQtyPercent,s.Dim1 FROM ADM_SchemeProducts s WITH(NOLOCK)
			JOIN INV_Product P WITH(NOLOCK) ON P.ProductID=s.ProductID	
			JOIN [ADM_SchemesDiscounts] T WITH(NOLOCK) on s.SchemeID=T.SchemeID
			WHERE T.ProfileID=@PriceChartID
			
	END
	ELSE IF @Type=3 /*TO GET ALL PROFILES*/
	BEGIN
		SELECT ProfileID,ProfileName FROM [ADM_SchemesDiscounts] WITH(NOLOCK)
		GROUP BY ProfileID,ProfileName
		ORDER BY ProfileName
	END
	ELSE IF @Type=4 /*TO GET CUSTOMIZATION INFO*/
	BEGIN
		
		SELECT [Value],DefaultValue FROM ADM_GlobalPreferences WHERE [Name]='SchemeFields'

	
		SELECT [Value] FROM ADM_GlobalPreferences WHERE [Name]='SchemesDefault CC'
	END
	ELSE IF @Type=5 /*TO DELETE PROFILE*/
	BEGIN		
		DELETE FROM ADM_SchemeProducts where SchemeID in (SELECT SchemeID from [ADM_SchemesDiscounts] WHERE ProfileID=@PriceChartID)
		DELETE FROM [ADM_SchemesDiscounts] WHERE ProfileID=@PriceChartID
	END
	ELSE IF @Type=6 /*TO GET DEFAULT PROFILE*/
	BEGIN
		DECLARE @CC NVARCHAR(100),@SQL NVARCHAR(MAX),@GroupBy NVARCHAR(200),@Join NVARCHAR(MAX)
		DECLARE @TblCC AS TABLE(ID INT IDENTITY(1,1),CC INT)
		
		SELECT @CC=[Value] FROM ADM_GlobalPreferences WHERE [Name]='Price Chart Default CC'
		
		SELECT @CC DefaultCC
		
		INSERT INTO @TblCC(CC)
		EXEC SPSplitString @CC,','

	--	select * from @TblCC
		SET @GroupBy='P.UOMID'
		SET @Join='P.UOMID=T.UOMID'
		
		DECLARE @WHERE NVARCHAR(MAX),@OrderBY NVARCHAR(MAX),@I INT,@COUNT INT
		SET @I=50000       
		SET @COUNT=50050
		SET @WHERE='P.WEF<='+CONVERT(NVARCHAR,CONVERT(FLOAT,getdate()))+' and ProductID='+CONVERT(NVARCHAR,@PriceChartID)
		WHILE(@I<@COUNT)
		BEGIN
			SET @I=@I+1			
			IF PATINDEX('%'+CONVERT(NVARCHAR,@I)+'%',@CC)=0
				SET @WHERE=@WHERE+' AND CCNID'+convert(nvarchar,@I-50000)+'=1'
			ELSE
			BEGIN
				SET @GroupBy=@GroupBy+',P.CCNID'+convert(nvarchar,@I-50000)
				SET @Join=@Join+' AND P.CCNID'+convert(nvarchar,@I-50000)+'=T.CCNID'+convert(nvarchar,@I-50000)
			END
		END
		
		IF (select count(*) from @TblCC WHERE CC=2)=0
			SET @WHERE=@WHERE+' AND AccountID=1'
		ELSE
		BEGIN
			SET @GroupBy=@GroupBy+',AccountID'
			SET @Join=@Join+' AND P.AccountID=T.AccountID'
		END

		
		--SET @SQL='SELECT * FROM COM_CCPrices P WHERE '+@WHERE
		--EXEC(@SQL)
		
		SET @SQL='SELECT *,CONVERT(DATETIME,WEF) WEF_DATE 
		,(SELECT TOP 1 UnitName FROM COM_UOM WITH(NOLOCK) WHERE UOMID=P.UOMID AND P.UOMID>0) UOMName
		,(SELECT TOP 1 AccountName FROM ACC_Accounts WITH(NOLOCK) WHERE AccountID=P.AccountID AND P.AccountID!=0) AccountName

		FROM COM_CCPrices P WHERE PriceCCID IN( SELECT MAX(PriceCCID) FROM COM_CCPrices P,
		(SELECT MAX(WEF) WEF,'+@GroupBy+' FROM COM_CCPrices P WHERE '+@WHERE+' GROUP BY '+@GroupBy+') T
					WHERE '+@Join+' AND '+@WHERE+' GROUP BY '+@GroupBy+')'
		print(@SQL)
		EXEC(@SQL)
			
	END
	ELSE IF @Type=7 /*TO GET SchemeID Used*/
	BEGIN
		if exists(select IsQtyFreeOffer from INV_DocDetails  with(nolock) where IsQtyFreeOffer=@PriceChartID)
			select 1
		else
			select 0
	END
	ELSE IF @Type=8 /*TO GET any Scheme Used from profile*/
	BEGIN
		if exists(select IsQtyFreeOffer from INV_DocDetails a with(nolock) 
		join [ADM_SchemesDiscounts]	b with(nolock) on a.IsQtyFreeOffer=b.Schemeid
		 where b.ProfileID=@PriceChartID)
			select 1
		else
			select 0
	END
	
--COMMIT TRANSACTION 
SET NOCOUNT OFF;   
RETURN 1
END TRY
BEGIN CATCH  
	--Return exception info [Message,Number,ProcedureName,LineNumber]  
	IF ERROR_NUMBER()=50000
	BEGIN
		SELECT ErrorMessage,ErrorNumber FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=ERROR_MESSAGE() AND LanguageID=@LangID
	END
	ELSE
	BEGIN
		SELECT ErrorMessage, ERROR_MESSAGE() AS ServerMessage,ERROR_NUMBER() as ErrorNumber, ERROR_PROCEDURE()as ProcedureName, ERROR_LINE() AS ErrorLine
	FROM COM_ErrorMessages WITH(NOLOCK) WHERE ErrorNumber=-999 AND LanguageID=@LangID
	END
--ROLLBACK TRANSACTION
SET NOCOUNT OFF  
RETURN -999   
END CATCH  


GO
